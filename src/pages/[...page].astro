---
import type { GetStaticPaths } from 'astro'
import PageLayout from '@/layouts/PageLayout.astro'
import { getOldestPosts, getSortedPosts } from '@/utils/content'
import appConfig from '@/config.json'
import Hero from '@/components/hero/Hero.astro'
import SectionBlock from '@/components/SectionBlock.astro'
import ProjectList from '@/components/ProjectList.astro'
import HighlightedProjects from '@/components/HighlightedProjects.astro'
import Timeline from '@/components/Timeline.astro'
import { getCollection } from 'astro:content'

interface PageProps extends Record<string, unknown> {
  currentPage: number
}

export const getStaticPaths = (async () => {
  const sortedPosts = await getSortedPosts()
  const { perPage } = appConfig.posts
  const totalPages = Math.ceil(sortedPosts.length / perPage)

  const paths = Array.from({ length: totalPages }).map((_, i) => {
    const props: PageProps = { currentPage: i + 1 }
    const params = {
      page: i === 0 ? undefined : `page/${i + 1}`,
    }
    return { params, props }
  })

  return paths
}) satisfies GetStaticPaths

const { currentPage } = Astro.props as PageProps

const allProjects = await getCollection('projects')

const homepagePosts = (await getOldestPosts()).slice(0, 6)

// Sort projects by dateAdded in descending order (most recent first)
const sortedProjects = allProjects.sort((a, b) => b.data.dateAdded.getTime() - a.data.dateAdded.getTime())

// Separate highlighted and regular projects
const highlightedProjects = sortedProjects.filter(project => project.data.highlighted)
const regularProjects = sortedProjects.filter(project => !project.data.highlighted)
---

<PageLayout>
  <div>
    {currentPage === 1 && <Hero />}
    {
      currentPage === 1 && (
        <div class="max-w-[1100px] px-4 md:px-8 py-16 mx-auto">
          <SectionBlock title="Highlighted Projects">
            <HighlightedProjects projects={highlightedProjects} />
          </SectionBlock>
        </div>
      )
    }
    {
      currentPage === 1 && (
        <div class="max-w-[1100px] px-4 md:px-8 py-20 mx-auto grid items-start gap-10">
          <SectionBlock title="Projects">
            <ProjectList projects={regularProjects} columns={3} />
          </SectionBlock>
        </div>
      )
    }
    {
      currentPage === 1 && (
        <div class="max-w-[800px] px-4 md:px-8 py-20 mx-auto">
          <SectionBlock title="Latest Posts">
            <Timeline posts={homepagePosts} />
          </SectionBlock>
        </div>
      )
    }
  </div>
</PageLayout>
